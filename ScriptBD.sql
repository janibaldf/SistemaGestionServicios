/*
Script de cracion de Base de Datos y Cuentas de Gestion 
Sistema de Gestion de Servivios
Anibal Diaz
Agosto2018
*/

/*Creacion de esquema de base de datos */
CREATE SCHEMA dbgestionservicios ;


/*Creacion de usuario Administrador de la nueva base de datos*/
CREATE USER 'dbAdminGS'@'%' IDENTIFIED BY '20*S6b3t0!18';
GRANT ALL PRIVILEGES ON dbgestionservicios.* TO 'dbAdminGS'@'%';


/*Creacion de usuario de aplicacion de la nueva base de datos*/

CREATE USER 'UserAppGS'@'%' IDENTIFIED BY '20*S6b3t0!18';
 GRANT SELECT, INSERT, UPDATE, DELETE, CREATE TEMPORARY TABLES, SHOW VIEW, EXECUTE ON 
 dbgestionservicios.* TO 'UserAppGS'@'%';





/*
Proyecto: 	Sistema de Gestion de Servicios
Objeto:		TB_SEQUENCIA
Funcion:	Tabla que almacena el maximo correlativo de una tabla, simulando una secuencia.
Autor:		Anibal Diaz
Fecha:		Agosto2018
*/
CREATE TABLE TB_SEQUENCIA (
	NOMBRE VARCHAR(50) NOT NULL,
	CORRELATIVO INTEGER(8) NOT NULL,
	FECHA_ACTUALIZACION TIMESTAMP
);

/* LLave primaria de la tabla  TB_SEQUENCIA*/
ALTER TABLE TB_SEQUENCIA ADD CONSTRAINT PK_SECUENCIA PRIMARY KEY (NOMBRE);



/*
Proyecto: 	Sistema de Gestion de Servicios
Objeto:		TB_RUTA
Funcion:	Tabla que almacena las rutas , se refiere a la informacion de los camiones.
Autor:		Anibal Diaz
Fecha:		Agosto2018
*/
CREATE TABLE TB_RUTA (
	CODIGO INTEGER(8) NOT NULL,
	PLACA VARCHAR(20) NOT NULL, 
	DESCRIPCION VARCHAR(100), 
	CORREO VARCHAR(100), 
	TELEFONO VARCHAR(50), 
	COMENTARIO VARCHAR(100),
	AUTORIZACION VARCHAR(20) NOT NULL, 
	FIRMA VARCHAR(200),
	ESTADO VARCHAR(2) NOT NULL,
	FECHA_INGRESO TIMESTAMP ,
	FECHA_ACTUALIZACION TIMESTAMP
);

/* LLave primaria de la tabla  TB_RUTA*/
ALTER TABLE TB_RUTA ADD CONSTRAINT PK_RUTA_CODIGO PRIMARY KEY (CODIGO);

/*
Proyecto: 	Sistema de Gestion de Servicios
Objeto:		TB_CATALOGO
Funcion:	Tabla para los catalogos simples dentro del sistema.
Autor:		Anibal Diaz
Fecha:		Agosto2018
*/
CREATE TABLE TB_CATALOGO (
	CODIGO INTEGER(8) NOT NULL,
	TIPO_CATALOGO INTEGER,
	DESCRIPCION VARCHAR(100) NOT NULL,
	FECHA_INGRESO TIMESTAMP,
	FECHA_ACTUALIZACION TIMESTAMP
);


/*
ESTADO RUTA Y CLIENTE
TIPO CLIENTE
*/

/* LLave primaria de la tabla  TB_CATALOGO*/
ALTER TABLE TB_CATALOGO ADD CONSTRAINT PK_CATALOGO_CODIGO PRIMARY KEY (CODIGO);

/* LLave foranea de la tabla  TB_CATALOGO hacia ella misma */
ALTER TABLE TB_CATALOGO ADD CONSTRAINT FK_CATALOGO_CODIGO FOREIGN KEY (TIPO_CATALOGO) 
	REFERENCES TB_CATALOGO(CODIGO) ;



/*
Proyecto: 	Sistema de Gestion de Servicios
Objeto:		
Funcion:	
Autor:		Anibal Diaz
Fecha:		Agosto2018
*/

CREATE TABLE TB_TIPO_PAGO(
	CODIGO_CATALOGO INTEGER(8) NOT NULL,
	MESES INTEGER(2) NOT NULL
	FECHA_INGRESO TIMESTAMP,
	FECHA_ACTUALIZACION TIMESTAMP
	);

ALTER TABLE TB_TIPO_PAGO ADD CONSTRAINT PK_TIPO_PAGO PRIMARY KEY (CODIGO,MES);
ALTER TABLE TB_TIPO_PAGO ADD CONSTRAINT FK_TIPO_PAGO_CATALOGO KEY (CODIGO_CATALOGO) 
	REFERENCES TB_CATALOGO(CODIGO) ;




/*
Proyecto: 	Sistema de Gestion de Servicios
Objeto:		TB_CLIENTE
Funcion:	Tabla que almacena los datos de los clientes en la base de datos
Autor:		Anibal Diaz
Fecha:		Agosto2018
*/

CREATE TABLE TB_CLIENTE(
	CODIGO INTEGER(8)  NOT NULL,
	CODIGO_RUTA  INTEGER(8) NOT NULL,
	ORDEN_SERVICIO INTEGER(8),
	TIPO_PAGO INTEGER(8),
	TIPO_SERVICIO INTEGER(8),
	NOMBRE VARCHAR(100),
	TELEFONO VARCHAR(50),
	NIT VARCHAR(50),
	COMPROBANTE VARCHAR(2),
	ZONA VARCHAR(2),
	COLONIA VARCHAR(50),
	AVENIDA VARCHAR(50),
	CALLE VARCHAR(50),
	NUMERO_CASA VARCHAR(50),
	APARTAMENTO VARCHAR(50),
	DIRECCION_IMPRESION VARCHAR(100) NOT NULL,
	REFERENCIA VARCHAR(100) NOT NULL,
	CODIGO_ESTADO INTEGER(2) NOT NULL NOT NULL,
	MOTIVO_ESTADO VARCHAR(100),
	COMENTARIO VARCHAR(100),
	COSTO_SERVICIO DECIMAL(5,2) NOT NULL,
	SALDO DECIMAL(5,2),
	FECHA_INGRESO TIMESTAMP,
	FECHA_ACTUALIZACION TIMESTAMP
);

/*Llave primaria de la tabla TB_CLIENTE*/
ALTER TABLE TB_CLIENTE ADD CONSTRAINT PK_CLIENTE_CODIGO PRIMARY KEY (CODIGO);

/*Llave foranea de la tabla TB_CLIENTE hacia la  tabla TB_RUTA*/
ALTER TABLE TB_CLIENTE ADD CONSTRAINT FK_CLIENTE_RUTA FOREIGN KEY (CODIGO_RUTA)
 	REFERENCES TB_RUTA(CODIGO) ;

 /*Llave foranea de la tabla TB_CLIENTE hacia la  tabla TB_CATALOGO por el estado del Cliente*/
ALTER TABLE TB_CLIENTE ADD CONSTRAINT FK_CLIENTE_ESTADO FOREIGN KEY (CODIGO_ESTADO)
 	REFERENCES TB_CATALOGO(CODIGO) ;

 /*Llave foranea de la tabla TB_CLIENTE hacia la  tabla TB_CATALOGO por el Tipo de Servicio*/
ALTER TABLE TB_CLIENTE ADD CONSTRAINT FK_CLIENTE_TIPO_SERVICIO FOREIGN KEY (TIPO_SERVICIO) 
	REFERENCES TB_CATALOGO(CODIGO) ;

 /*Aun por definir esta llave*/
ALTER TABLE TB_CLIENTE ADD CONSTRAINT FK_CLIENTE_TIPO_PAGO FOREIGN KEY (TIPO_PAGO) 
	REFERENCES TB_CATALOGO(CODIGO) ;




/*
Proyecto: 	Sistema de Gestion de Servicios
Objeto:		TB_USUARIO
Funcion:	Tabla que almacena los datos de los usuarios de las aplicacion.
Autor:		Anibal Diaz
Fecha:		Agosto2018
*/
CREATE TABLE TB_USUARIO(
	CODIGO INTEGER(8) NOT NULL,
	CUENTA VARCHAR(50) NOT NULL,
	PASSWORD VARCHAR(300) NOT NULL,
	NOMBRE VARCHAR(50) NOT NULL,
	APELLIDO VARCHAR(50) NOT NULL,
	ESTADO VARCHAR(2) NOT NULL
	FECHA_INGRESO TIMESTAMP,
	FECHA_ACTUALIZACION TIMESTAMP
);
/*Llave primaria de la tabla TB_USUARIO*/
ALTER TABLE TB_USUARIO ADD CONSTRAINT PK_USUARIO_CODIGO PRIMARY KEY (CODIGO);


/*
Proyecto: 	Sistema de Gestion de Servicios
Objeto:		TB_ROL
Funcion:	Tabla que almacena los datos de los roles de seguridad dentro de la aplicacion.
Autor:		Anibal Diaz
Fecha:		Agosto2018
*/
CREATE TABLE TB_ROL(
	CODIGO INTEGER(4) NOT NULL,
	NOMBRE VARCHAR(50) NOT NULL,
    FECHA_INGRESO TIMESTAMP,
	FECHA_ACTUALIZACION TIMESTAMP
	)
 /*Llave primarario de la tabla TB_ROL */
ALTER TABLE TB_ROL ADD CONSTRAINT PK_CODIGO_ROL PRIMARY KEY (CODIGO);




/*
Proyecto: 	Sistema de Gestion de Servicios
Objeto:		TB_ROL
Funcion:	Tabla que almacena la relacion entr la ruta, el usuario y el rol .
Autor:		Anibal Diaz
Fecha:		Agosto2018
*/
CREATE TABLE TB_USUARIO_RUTA_ROL(
	CODIGO_RUTA INTEGER(8) NOT NULL,
	CODIGO_USUARIO INTEGER(8) NOT NULL,
	CODIGO_ROL INTEGER NOT(8) NULL,
	FECHA_INGRESO TIMESTAMP,
	FECHA_ACTUALIZACION TIMESTAMP
);
 /*Llave primarario de la tabla TB_USUARIO_RUTA_ROL */
ALTER TABLE TB_USUARIO_RUTA_ROL ADD CONSTRAINT PK_USUARIO_RUTA PRIMARY KEY (CODIGO_RUTA,CODIGO_USUARIO, CODIGO_ROL);
 
 /*Llave foranea de la tabla TB_USUARIO_RUTA_ROL hacia la  tabla TB_RUTA por codigo de ruta*/
ALTER TABLE TB_USUARIO_RUTA_ROL ADD CONSTRAINT FK_URR_RUTA FOREIGN KEY (CODIGO_RUTA) 
	REFERENCES TB_RUTA(CODIGO) ;
	/*Llave foranea de la tabla TB_USUARIO_RUTA_ROL hacia la  tabla TB_USUARIO por codigo de usuario*/
ALTER TABLE TB_USUARIO_RUTA_ROL ADD CONSTRAINT FK_URR_USUARIO FOREIGN KEY (CODIGO_USUARIO) 
	REFERENCES TB_USUARIO(CODIGO) ;
	/*Llave foranea de la tabla TB_USUARIO_RUTA_ROL hacia la  tabla TB_ROL por codigo del rol*/
ALTER TABLE TB_USUARIO_RUTA_ROL ADD CONSTRAINT FK_URR_ROL FOREIGN KEY (CODIGO_ROL) 
	REFERENCES TB_ROL(CODIGO);

/*
Proyecto: 	Sistema de Gestion de Servicios
Objeto:		CODIGO_CUENTA_CLIENTE
Funcion:	Tabla que almacena la relacion entr la ruta, el usuario y el rol .
Autor:		Anibal Diaz
Fecha:		Agosto2018
*/
CREATE TABLE TB_CUENTA_CLIENTE (
	CODIGO_CUENTA_CLIENTE INTEGER(8),
	CODIGO_CLIENTE INTEGER(8),
	COSTO_SERVICIO DECIMAL(5,2),
	MONTO_PAGO DECIMAL(5,2),
	SALDO_ANTERIOR DECIMAL(5,2),
	NUEVO_SALDO DECIMAL(5,2),
	MES VARCHAR(50),
	TIPO_TRANSACCION INTEGER(8),
	FECHA_INGRESO TIMESTAMP,
	FECHA_ACTUALIZACION TIMESTAMP
);

/*Llave primarario de la tabla TB_CUENTA_CLIENTE */
ALTER TABLE TB_CUENTA_CLIENTE ADD CONSTRAINT PK_CUENTA_CLIENTE PRIMARY KEY (CODIGO_CUENTA_CLIENTE);
 
 /*Llave foranea de la tabla TB_CUENTA_CLIENTE hacia la  tabla TB_CATALOGO pra tipo de transaccion*/
ALTER TABLE TB_CUENTA_CLIENTE ADD CONSTRAINT FK_TIPO_TRANSACCION FOREIGN KEY (TIPO_TRANSACCION) 
	REFERENCES TB_CATALOGO(CODIGO) ;


/*Insert iniciales para alimentar las secuencias*/

/*Insert iniciales para alimentar los catalogos*/

INSERT INTO TB_CATALOGO(CODIGO,TIPO_CATALOGO,DESCRIPCION,FECHA_INGRESO, FECHA_ACTUALIZACION) 
VALUES(0,NULL,'Tipos de Catalogos',CURRENT_TIMESTAMP,CURRENT_TIMESTAMP);

INSERT INTO TB_CATALOGO(CODIGO,TIPO_CATALOGO,DESCRIPCION,FECHA_INGRESO, FECHA_ACTUALIZACION) 
VALUES(1,0,'Tipos de Servicio',CURRENT_TIMESTAMP,CURRENT_TIMESTAMP);

INSERT INTO TB_CATALOGO(CODIGO,TIPO_CATALOGO,DESCRIPCION,FECHA_INGRESO, FECHA_ACTUALIZACION) 
VALUES(2,0,'Estados Genericos',CURRENT_TIMESTAMP,CURRENT_TIMESTAMP);

INSERT INTO TB_CATALOGO(CODIGO,TIPO_CATALOGO,DESCRIPCION,FECHA_INGRESO, FECHA_ACTUALIZACION) 
VALUES(3,0,'Estados Clientes',CURRENT_TIMESTAMP,CURRENT_TIMESTAMP);

INSERT INTO TB_CATALOGO(CODIGO,TIPO_CATALOGO,DESCRIPCION,FECHA_INGRESO, FECHA_ACTUALIZACION) 
VALUES(4,0,'Tipos de Transacciones',CURRENT_TIMESTAMP,CURRENT_TIMESTAMP);

INSERT INTO TB_CATALOGO(CODIGO,TIPO_CATALOGO,DESCRIPCION,FECHA_INGRESO, FECHA_ACTUALIZACION) 
VALUES(5,0,'Catalogo de Bancos',CURRENT_TIMESTAMP,CURRENT_TIMESTAMP);

INSERT INTO TB_CATALOGO(CODIGO,TIPO_CATALOGO,DESCRIPCION,FECHA_INGRESO, FECHA_ACTUALIZACION) 
VALUES(6,0,'Tipos de Pagos',CURRENT_TIMESTAMP,CURRENT_TIMESTAMP);


INSERT INTO TB_CATALOGO(CODIGO,TIPO_CATALOGO,DESCRIPCION,FECHA_INGRESO, FECHA_ACTUALIZACION) 
VALUES(11,6,'Mes-Vencido',CURRENT_TIMESTAMP,CURRENT_TIMESTAMP);

INSERT INTO TB_CATALOGO(CODIGO,TIPO_CATALOGO,DESCRIPCION,FECHA_INGRESO, FECHA_ACTUALIZACION) 
VALUES(12,6,'Mes-Adelantado',CURRENT_TIMESTAMP,CURRENT_TIMESTAMP);

INSERT INTO TB_CATALOGO(CODIGO,TIPO_CATALOGO,DESCRIPCION,FECHA_INGRESO, FECHA_ACTUALIZACION) 
VALUES(13,6,'Bimestral-Par',CURRENT_TIMESTAMP,CURRENT_TIMESTAMP);


INSERT INTO TB_CATALOGO(CODIGO,TIPO_CATALOGO,DESCRIPCION,FECHA_INGRESO, FECHA_ACTUALIZACION) 
VALUES(14,6,'Bimestral-Impar',CURRENT_TIMESTAMP,CURRENT_TIMESTAMP);

INSERT INTO TB_CATALOGO(CODIGO,TIPO_CATALOGO,DESCRIPCION,FECHA_INGRESO, FECHA_ACTUALIZACION) 
VALUES(15,6,'Trimestral',CURRENT_TIMESTAMP,CURRENT_TIMESTAMP);

INSERT INTO TB_CATALOGO(CODIGO,TIPO_CATALOGO,DESCRIPCION,FECHA_INGRESO, FECHA_ACTUALIZACION) 
VALUES(16,6,'Semestral',CURRENT_TIMESTAMP,CURRENT_TIMESTAMP);

INSERT INTO TB_CATALOGO(CODIGO,TIPO_CATALOGO,DESCRIPCION,FECHA_INGRESO, FECHA_ACTUALIZACION) 
VALUES(17,6,'Anual',CURRENT_TIMESTAMP,CURRENT_TIMESTAMP);
INSERT INTO TB_CATALOGO(CODIGO,TIPO_CATALOGO,DESCRIPCION,FECHA_INGRESO, FECHA_ACTUALIZACION) 


VALUES((SELECT MAX(CATALOGO.CODIGO)+1 FROM TB_CATALOGO CATALOGO),1,'Residencial',CURRENT_TIMESTAMP,CURRENT_TIMESTAMP);

INSERT INTO TB_CATALOGO(CODIGO,TIPO_CATALOGO,DESCRIPCION,FECHA_INGRESO, FECHA_ACTUALIZACION) 
VALUES((SELECT MAX(CATALOGO.CODIGO)+1 FROM TB_CATALOGO CATALOGO),1,'Comercial',CURRENT_TIMESTAMP,CURRENT_TIMESTAMP);

INSERT INTO TB_CATALOGO(CODIGO,TIPO_CATALOGO,DESCRIPCION,FECHA_INGRESO, FECHA_ACTUALIZACION) 
VALUES((SELECT MAX(CATALOGO.CODIGO)+1 FROM TB_CATALOGO CATALOGO),1,'Industrial ',CURRENT_TIMESTAMP,CURRENT_TIMESTAMP);

INSERT INTO TB_CATALOGO(CODIGO,TIPO_CATALOGO,DESCRIPCION,FECHA_INGRESO, FECHA_ACTUALIZACION) 
VALUES((SELECT MAX(CATALOGO.CODIGO)+1 FROM TB_CATALOGO CATALOGO),1,'Gubernamental',CURRENT_TIMESTAMP,CURRENT_TIMESTAMP);


INSERT INTO TB_CATALOGO(CODIGO,TIPO_CATALOGO,DESCRIPCION,FECHA_INGRESO, FECHA_ACTUALIZACION) 
VALUES((SELECT MAX(CATALOGO.CODIGO)+1 FROM TB_CATALOGO CATALOGO),2,'Activo',CURRENT_TIMESTAMP,CURRENT_TIMESTAMP);

INSERT INTO TB_CATALOGO(CODIGO,TIPO_CATALOGO,DESCRIPCION,FECHA_INGRESO, FECHA_ACTUALIZACION) 
VALUES((SELECT MAX(CATALOGO.CODIGO)+1 FROM TB_CATALOGO CATALOGO),2,'Inactivo',CURRENT_TIMESTAMP,CURRENT_TIMESTAMP);



INSERT INTO TB_CATALOGO(CODIGO,TIPO_CATALOGO,DESCRIPCION,FECHA_INGRESO, FECHA_ACTUALIZACION) 
VALUES((SELECT MAX(CATALOGO.CODIGO)+1 FROM TB_CATALOGO CATALOGO),3,'Activo',CURRENT_TIMESTAMP,CURRENT_TIMESTAMP);


INSERT INTO TB_CATALOGO(CODIGO,TIPO_CATALOGO,DESCRIPCION,FECHA_INGRESO, FECHA_ACTUALIZACION) 
VALUES((SELECT MAX(CATALOGO.CODIGO)+1 FROM TB_CATALOGO CATALOGO),3,'Activo',CURRENT_TIMESTAMP,CURRENT_TIMESTAMP);


INSERT INTO TB_CATALOGO(CODIGO,TIPO_CATALOGO,DESCRIPCION,FECHA_INGRESO, FECHA_ACTUALIZACION) 
VALUES((SELECT MAX(CATALOGO.CODIGO)+1 FROM TB_CATALOGO CATALOGO),3,'Suspendido',CURRENT_TIMESTAMP,CURRENT_TIMESTAMP);

INSERT INTO TB_CATALOGO(CODIGO,TIPO_CATALOGO,DESCRIPCION,FECHA_INGRESO, FECHA_ACTUALIZACION) 
VALUES((SELECT MAX(CATALOGO.CODIGO)+1 FROM TB_CATALOGO CATALOGO),4,'Debito',CURRENT_TIMESTAMP,CURRENT_TIMESTAMP);


INSERT INTO TB_CATALOGO(CODIGO,TIPO_CATALOGO,DESCRIPCION,FECHA_INGRESO, FECHA_ACTUALIZACION) 
VALUES((SELECT MAX(CATALOGO.CODIGO)+1 FROM TB_CATALOGO CATALOGO),4,'Credito',CURRENT_TIMESTAMP,CURRENT_TIMESTAMP);

INSERT INTO TB_CATALOGO(CODIGO,TIPO_CATALOGO,DESCRIPCION,FECHA_INGRESO, FECHA_ACTUALIZACION) 
VALUES((SELECT MAX(CATALOGO.CODIGO)+1 FROM TB_CATALOGO CATALOGO),5,'G&T Continental',CURRENT_TIMESTAMP,CURRENT_TIMESTAMP);

INSERT INTO TB_CATALOGO(CODIGO,TIPO_CATALOGO,DESCRIPCION,FECHA_INGRESO, FECHA_ACTUALIZACION) 
VALUES((SELECT MAX(CATALOGO.CODIGO)+1 FROM TB_CATALOGO CATALOGO),5,'Industrial',CURRENT_TIMESTAMP,CURRENT_TIMESTAMP);

INSERT INTO TB_CATALOGO(CODIGO,TIPO_CATALOGO,DESCRIPCION,FECHA_INGRESO, FECHA_ACTUALIZACION) 
VALUES((SELECT MAX(CATALOGO.CODIGO)+1 FROM TB_CATALOGO CATALOGO),5,'Banrural',CURRENT_TIMESTAMP,CURRENT_TIMESTAMP);




/*Mes-Atrasado*/
INSERT INTO TB_TIPO_PAGO VALUES(11, 1,CURRENT_TIMESTAMP,CURRENT_TIMESTAMP);
INSERT INTO TB_TIPO_PAGO VALUES(11, 2,CURRENT_TIMESTAMP,CURRENT_TIMESTAMP);
INSERT INTO TB_TIPO_PAGO VALUES(11, 3,CURRENT_TIMESTAMP,CURRENT_TIMESTAMP);
INSERT INTO TB_TIPO_PAGO VALUES(11, 4,CURRENT_TIMESTAMP,CURRENT_TIMESTAMP);
INSERT INTO TB_TIPO_PAGO VALUES(11, 5,CURRENT_TIMESTAMP,CURRENT_TIMESTAMP);
INSERT INTO TB_TIPO_PAGO VALUES(11, 6,CURRENT_TIMESTAMP,CURRENT_TIMESTAMP);
INSERT INTO TB_TIPO_PAGO VALUES(11, 7,CURRENT_TIMESTAMP,CURRENT_TIMESTAMP);
INSERT INTO TB_TIPO_PAGO VALUES(11, 8,CURRENT_TIMESTAMP,CURRENT_TIMESTAMP);
INSERT INTO TB_TIPO_PAGO VALUES(11, 9,CURRENT_TIMESTAMP,CURRENT_TIMESTAMP);
INSERT INTO TB_TIPO_PAGO VALUES(11, 10,CURRENT_TIMESTAMP,CURRENT_TIMESTAMP);
INSERT INTO TB_TIPO_PAGO VALUES(11, 11,CURRENT_TIMESTAMP,CURRENT_TIMESTAMP);
INSERT INTO TB_TIPO_PAGO VALUES(11, 12,CURRENT_TIMESTAMP,CURRENT_TIMESTAMP);

/*Mes-Adelantado*/
INSERT INTO TB_TIPO_PAGO VALUES(12, 1,CURRENT_TIMESTAMP,CURRENT_TIMESTAMP);
INSERT INTO TB_TIPO_PAGO VALUES(12, 2,CURRENT_TIMESTAMP,CURRENT_TIMESTAMP);
INSERT INTO TB_TIPO_PAGO VALUES(12, 3,CURRENT_TIMESTAMP,CURRENT_TIMESTAMP);
INSERT INTO TB_TIPO_PAGO VALUES(12, 4,CURRENT_TIMESTAMP,CURRENT_TIMESTAMP);
INSERT INTO TB_TIPO_PAGO VALUES(12, 5,CURRENT_TIMESTAMP,CURRENT_TIMESTAMP);
INSERT INTO TB_TIPO_PAGO VALUES(12, 6,CURRENT_TIMESTAMP,CURRENT_TIMESTAMP);
INSERT INTO TB_TIPO_PAGO VALUES(12, 7,CURRENT_TIMESTAMP,CURRENT_TIMESTAMP);
INSERT INTO TB_TIPO_PAGO VALUES(12, 8,CURRENT_TIMESTAMP,CURRENT_TIMESTAMP);
INSERT INTO TB_TIPO_PAGO VALUES(12, 9,CURRENT_TIMESTAMP,CURRENT_TIMESTAMP);
INSERT INTO TB_TIPO_PAGO VALUES(12, 10,CURRENT_TIMESTAMP,CURRENT_TIMESTAMP);
INSERT INTO TB_TIPO_PAGO VALUES(12, 11,CURRENT_TIMESTAMP,CURRENT_TIMESTAMP);
INSERT INTO TB_TIPO_PAGO VALUES(12, 12,CURRENT_TIMESTAMP,CURRENT_TIMESTAMP);


/*Bimestral - Par*/
INSERT INTO TB_TIPO_PAGO VALUES(13, 2,CURRENT_TIMESTAMP,CURRENT_TIMESTAMP);
INSERT INTO TB_TIPO_PAGO VALUES(13, 4,CURRENT_TIMESTAMP,CURRENT_TIMESTAMP);
INSERT INTO TB_TIPO_PAGO VALUES(13, 6,CURRENT_TIMESTAMP,CURRENT_TIMESTAMP);
INSERT INTO TB_TIPO_PAGO VALUES(13, 8,CURRENT_TIMESTAMP,CURRENT_TIMESTAMP);
INSERT INTO TB_TIPO_PAGO VALUES(13, 10,CURRENT_TIMESTAMP,CURRENT_TIMESTAMP);
INSERT INTO TB_TIPO_PAGO VALUES(13, 12,CURRENT_TIMESTAMP,CURRENT_TIMESTAMP);

/*Bimestral - Inpar*/
INSERT INTO TB_TIPO_PAGO VALUES(14, 1,CURRENT_TIMESTAMP,CURRENT_TIMESTAMP);
INSERT INTO TB_TIPO_PAGO VALUES(14, 3,CURRENT_TIMESTAMP,CURRENT_TIMESTAMP);
INSERT INTO TB_TIPO_PAGO VALUES(14, 5,CURRENT_TIMESTAMP,CURRENT_TIMESTAMP);
INSERT INTO TB_TIPO_PAGO VALUES(14, 7,CURRENT_TIMESTAMP,CURRENT_TIMESTAMP);
INSERT INTO TB_TIPO_PAGO VALUES(14, 9,CURRENT_TIMESTAMP,CURRENT_TIMESTAMP);
INSERT INTO TB_TIPO_PAGO VALUES(14, 11,CURRENT_TIMESTAMP,CURRENT_TIMESTAMP);

/*Trimestral - Inpar*/
INSERT INTO TB_TIPO_PAGO VALUES(15, 3,CURRENT_TIMESTAMP,CURRENT_TIMESTAMP);
INSERT INTO TB_TIPO_PAGO VALUES(15, 6,CURRENT_TIMESTAMP,CURRENT_TIMESTAMP);
INSERT INTO TB_TIPO_PAGO VALUES(15, 9,CURRENT_TIMESTAMP,CURRENT_TIMESTAMP);
INSERT INTO TB_TIPO_PAGO VALUES(15, 12,CURRENT_TIMESTAMP,CURRENT_TIMESTAMP);

/*Semestral*/
INSERT INTO TB_TIPO_PAGO VALUES(16, 6,CURRENT_TIMESTAMP,CURRENT_TIMESTAMP);
INSERT INTO TB_TIPO_PAGO VALUES(16, 12,CURRENT_TIMESTAMP,CURRENT_TIMESTAMP);

/*Anual*/
INSERT INTO TB_TIPO_PAGO VALUES(17, 12,CURRENT_TIMESTAMP,CURRENT_TIMESTAMP);

/*Roles*/
INSERT INTO TB_ROL VALUES (1,'Administrador',CURRENT_TIMESTAMP,CURRENT_TIMESTAMP);
INSERT INTO TB_ROL VALUES (2,'Operador-Mantenimiento',CURRENT_TIMESTAMP,CURRENT_TIMESTAMP);
INSERT INTO TB_ROL VALUES (3,'Operador-Impresion',CURRENT_TIMESTAMP,CURRENT_TIMESTAMP);
INSERT INTO TB_ROL VALUES (4,'Operador-Pagos',CURRENT_TIMESTAMP,CURRENT_TIMESTAMP);

////////////////////////////////////////////////////////////////////////////

CREATE TABLE TB_PERMISO_ROL(
	CODIGO_PERMISO_ROL INTEGER(8) NOT NULL,
	CODIGO_ROL INTEGER(8) NOT NULL,
	CODIGO_MODULO INTEGER(8) NOT NULL,
	CODIGO_PERMISO INTEGER(8) NOT NULL,
	FECHA_INGRESO TIMESTAMP,
	FECHA_ACTUALIZACION TIMESTAMP
);
ALTER TABLE TB_PERMISO_ROL ADD CONSTRAINT PK_MODULO_PERMISO PRIMARY KEY (CODIGO_MODULO,CODIGO_PERMISO);
ALTER TABLE TB_PERMISO_ROL ADD CONSTRAINT FK_PERMISO_ROL_ROL FOREIGN KEY (CODIGO_ROL) 
	REFERENCES TB_CATALOGO(CODIGO);